{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "smartpass": {
      "root": "",
      "sourceRoot": "src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "customWebpackConfig": {
              "path": "./extra-webpack.config.js",
              "mergeStrategies": {
                "externals": "replace"
              }
            },
            "allowedCommonJsDependencies": [
              "lodash",
              "firebase",
              "angular2-websocket",
              "xlsx",
              "dragula",
              "chart.js",
              "hammerjs",
              "@firebase/util",
              "url"
            ],
            "outputPath": "dist",
            "index": "src/index.html",
            "main": "src/main.ts",
            "tsConfig": "src/tsconfig.app.json",
            "polyfills": "src/polyfills.ts",
            "showCircularDependencies": false,
            "assets": [
              "src/_headers",
              "src/assets",
              "src/preloader.js",
              "src/firebase-messaging-sw.js",
              "src/manifest.json",
              "src/ngsw-worker.js",
              "src/.well-known"
            ],
            "styles": [
              "src/styles.scss",
              "node_modules/font-awesome/css/font-awesome.min.css"
            ],
            "scripts": [
              "node_modules/chart.js/dist/Chart.bundle.js",
              "node_modules/jspdf/dist/jspdf.min.js",
              "node_modules/html2canvas/dist/html2canvas.min.js",
              "node_modules/jszip/dist/jszip.js"
            ]
          },
          "configurations": {
            "local": {
              "sourceMap": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.local.ts"
                }
              ]
            },
            "local-prod": {
              "sourceMap": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.local-prod.ts"
                }
              ]
            },
            "proxy": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.proxy.ts"
                }
              ]
            },
            "staging": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": true,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.staging.ts"
                }
              ],
            },
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": true,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "smartpass:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "smartpass:build:local"
            },
            "local-prod": {
              "browserTarget": "smartpass:build:local-prod"
            },
            "proxy": {
              "browserTarget": "smartpass:build:proxy"
            },
            "staging": {
              "browserTarget": "smartpass:build:staging"
            },
            "production": {
              "browserTarget": "smartpass:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "smartpass:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "karmaConfig": "./karma.conf.js",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "src/tsconfig.spec.json",
            "scripts": [],
            "styles": [
              "src/styles.scss",
              "node_modules/font-awesome/css/font-awesome.min.css",
              "node_modules/primeng/resources/themes/omega/theme.css",
              "node_modules/primeng/resources/primeng.min.css"
            ],
            "assets": [
              "src/assets",
              "src/favicon.ico",
              "src/manifest.json"
            ]
          }
        },
        "cypress-run": {
          "builder": "@cypress/schematic:cypress",
          "options": {
            "devServerTarget": "smartpass:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "smartpass:serve:production"
            }
          }
        },
        "cypress-open": {
          "builder": "@cypress/schematic:cypress",
          "options": {
            "watch": true,
            "headless": false
          }
        },
        "e2e": {
          "builder": "@cypress/schematic:cypress",
          "options": {
            "devServerTarget": "smartpass:serve",
            "watch": false,
            "headless": true,
            "record": false,
            "video": false,
            "configFile": "./cypress.config.ts"
          },

          "configurations": {
            "production": {
              "devServerTarget": "smartpass:serve:production"
            }
          }
        }
      }
    }
  },
  "defaultProject": "smartpass",
  "schematics": {
    "@schematics/angular:component": {
      "prefix": "sp",
      "style": "scss"
    },
    "@schematics/angular:directive": {
      "prefix": "sp"
    }
  },
  "cli": {
    "analytics": false
  }
}
